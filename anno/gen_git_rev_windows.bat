set OUTPUT_FILE=git_info.cpp

REM Read branch name *******************************************
git rev-parse --abbrev-ref HEAD > temp.txt
set /p GIT_BRANCH=<temp.txt

REM Read revision *******************************************
git rev-parse --short HEAD > temp.txt
set /p GIT_REVISION=<temp.txt

REM Read URL *******************************************
git config --get remote.origin.url > temp.txt
set /p GIT_URL=<temp.txt

REM Last commit time *******************************************
git log -1 --format=%%cd > temp.txt
set /p GIT_TIME=<temp.txt

REM Detect modifications *******************************************
del temp.txt
set GIT_STATUS=
for /f %%i in ('git status -s') do set GIT_STATUS=%%i

echo // this file is autogenerated								> %OUTPUT_FILE%
echo namespace git_info {										>> %OUTPUT_FILE%
echo const char* branch = R^"(%GIT_BRANCH%)^";		    		>> %OUTPUT_FILE%
echo const char* revision = R^"(%GIT_REVISION%)^";				>> %OUTPUT_FILE%
echo const char* time_last_commit = ^"%GIT_TIME%^";				>> %OUTPUT_FILE%
echo const char* URL = R^"(%GIT_URL%)^";						>> %OUTPUT_FILE%
IF [%GIT_STATUS%] == [] (
echo const char* modified = ^"Not modified^";					>> %OUTPUT_FILE%
) else (
echo const char* modified = ^"Modified^";						>> %OUTPUT_FILE%
)
echo const char* commit_time = ^"%GIT_TIME%^";					>> %OUTPUT_FILE%
echo const char* build_time = ^"%date% %time%^";				>> %OUTPUT_FILE%
echo }															>> %OUTPUT_FILE%
